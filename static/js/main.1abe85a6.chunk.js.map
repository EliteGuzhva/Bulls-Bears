{"version":3,"sources":["store/education/reducer.ts","store/tickers/action-types.ts","Components/Page.tsx","theme.ts","Components/HomePage.tsx","api/sessions.ts","utils/date.ts","api/helpers/users.ts","api/users.ts","context/useAuth.tsx","custom-hooks/useHistorySetter.ts","Components/UserInfo.tsx","Components/Account.tsx","Components/Links.tsx","Components/Logo.tsx","Components/NavigationBar.tsx","Components/Education/EducationLessonPreview.tsx","Components/Education/EducationLessonsPreviewRow.tsx","Components/Education/EducationLevel.tsx","selectors/education/utils/get-level-from-lessons.ts","selectors/education/education.ts","Components/Education/EducationPage.tsx","store/tickers/utils/map-rest-to-model.ts","types/user.ts","store/tickers/actions.ts","store/tickers/types.ts","store/index.ts","store/tickers/reducer.ts","Components/Education/EducationLessonTabs.tsx","Components/Education/EducationLessonSlide.tsx","Components/Education/EducationLessonTabPanel.tsx","Components/Education/EducationLesson.tsx","Components/Auth/Username.tsx","Components/Auth/Password.tsx","Components/Auth/AuthWrapper.tsx","Components/Auth/SignIn.tsx","Components/Auth/Email.tsx","Components/Auth/SignUp.tsx","selectors/tickers/tickers.ts","Components/Sandbox/TickerChart.tsx","Components/Sandbox/ChartRouter.tsx","Components/Sandbox/SandboxInit.tsx","custom-hooks/useSandboxInit.ts","custom-hooks/useTransactionsHook.ts","Components/Sandbox/SandboxStep.tsx","Components/Sandbox/Transactions.tsx","Components/Sandbox/RightsideBar/AvailableTickers.tsx","Components/Sandbox/RightsideBar/TransactionsHistory.tsx","context/get-user-transactions.ts","Components/Sandbox/RightsideBar/Assets.tsx","Components/Sandbox/SandboxContent.tsx","Components/Sandbox/Sandbox.tsx","App.tsx","reportWebVitals.ts","index.tsx","store/education/action-types.ts","selectors/education/utils/map-response-slide-to-slide.ts","store/education/actions.ts","store/education/index.ts"],"names":["education","state","lessons","lessonsData","action","type","EducationActionType","SetLessons","SetLessonData","data","TickersActionType","Page","children","classes","useStyles","Container","maxWidth","Box","className","content","makeStyles","height","marginTop","theme","color","HomePage","homePage","display","API_URL","process","login","username","password","a","formData","FormData","append","fetch","method","body","response","json","undefined","responseJson","token","Error","register","email","ok","logOut","mapTimestampToDate","timestamp","Date","mapDateToTimestamp","date","Number","getTime","addDays","days","newDate","setDate","getDate","floorHours","setHours","mapServerAssetToAsset","serverAsset","transactions","ticker","rest","mapTransactionToTransactionWithTicker","serverTransaction","operation_type","operationType","mapServerTransactionToTransaction","map","mapServerSandboxDataToSandboxData","serverSandboxData","assets","balance","virtual_current","virtual_start","currentTime","startTime","mapServerUserToUser","serverUser","sandbox_data","sandboxData","getUser","headers","message","user","console","log","performTransaction","params","amount","price","String","sandboxStep","newTime","sandboxInit","AuthContext","createContext","AuthProvider","useState","setToken","loading","setLoading","loadingInitial","setLoadingInitial","setUser","useEffect","lsTocken","localStorage","getItem","users","then","catch","_error","removeItem","finally","sessions","sessionToken","setItem","userByToken","logout","sandboxTransaction","userAfterTransaction","userAfterStep","userAfterInit","memoedValue","useMemo","Provider","value","useAuth","useContext","useHistorySetter","url","history","useHistory","push","UserInfo","React","anchorEl","setAnchorEl","Button","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","account","Account","setHistory","links","flexGrow","justifyContent","link","textDecoration","name","Links","Typography","variant","to","Logo","props","NavigationBar","root","AppBar","position","Toolbar","toolbar","gridTemplateColumns","EducationLessonPreview","title","description","media","useRouteMatch","handleLessonClick","useCallback","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","width","EducationLessonPreviewRow","row","lesson","gap","margin","EducationLevel","levelName","Paper","toUpperCase","mapLessonToLessonForLevel","_id","index","photo_url","getLevelFromLessons","lessonsForLevel","filter","level_name","sort","b","getLessons","createSelector","result","getLevelNames","reduce","acc","add","Set","getLevels","levelNames","Array","from","EducationPage","dispatch","useDispatch","levels","useSelector","length","getAllLessons","container","levelData","key","flexDirection","OperationType","mapGetTickerResponseToTickerDataArray","Object","entries","Close","High","Low","Open","close","high","low","setTickerData","tickerName","tickersData","SetTickerData","appendTickerData","tickerData","AppendTickerData","initialState","availableTickerNames","selectedTicker","createStore","combineReducers","tickers","SetAvailableTickers","tickerNames","SetSelectedTicker","composeWithDevTools","applyMiddleware","thunk","EducationLessonTabs","handleChange","tabsLabels","Tabs","orientation","onChange","label","Tab","backgroundColor","EducationLessonSlide","text","renderButtons","src","EducationLessonTabPanel","role","hidden","EducationLesson","tab","setTab","newValue","nextSlide","previousSlide","lessonDataId","useParams","lessonData","find","ld","getLessonDataByLessonDataId","getLessonData","slides","slide","slideNumber","buttons","disabled","goBack","slideProps","progress","CircularProgress","marginLeft","alignItems","Username","TextField","Password","AuthWrapper","SignIn","setUserName","setPassword","setHome","handleLogin","target","Email","SignUp","setEmail","handleSingUp","getTickerData","_","getSelectedTicker","getAvailableTickers","TickerChart","dataToDisplay","chartType","options","legend","rootProps","controls","controlType","filterColumnIndex","ui","chartOptions","chartArea","hAxis","baselineColor","controlPosition","controlWrapperParams","range","start","end","ChartRouter","current","monthBefore","months","setMonth","getMonth","addMonths","begin","beginTimestamp","endTimestamp","getTickerHistory","forEach","d","addValue","addTickerHistory","SandboxInit","selectedDate","setSelectedDate","setAmount","handleAmountChange","val","handleDateChange","handleInitClick","useSandboxInit","utils","DateFnsUtils","sameWidth","KeyboardButtonProps","useTransactionsHook","lastTickerData","pop","getLastTickerData","prev","handleBuyClick","Buy","handleSellClick","Sell","SandboxStep","handleStep","Transactions","AvailableTickers","handleTickerClick","List","ListItem","ListItemText","primary","TransactionsHistory","setTransactions","curr","getUserTransactions","ListItemIcon","Add","Remove","secondary","item","Assets","TabPanel","other","aria-labelledby","p","SandboxContent","setValue","aria-label","Sandbox","App","store","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","mapResponseSlideToSlide","slide_number","lesson_data"],"mappings":"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","file":"static/js/main.1abe85a6.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\nimport { Lesson, State } from './types';\nimport { Action, EducationActionType } from './action-types';\n\nexport const education = (\n  state: State = { lessons: [], lessonsData: [] },\n  action: Action\n): State => {\n  switch (action.type) {\n    case EducationActionType.SetLessons:\n      return {\n        ...state,\n        lessons: action.lessons,\n      };\n    case EducationActionType.SetLessonData:\n      return {\n        ...state,\n        lessonsData: [...state.lessonsData, action.data],\n      };\n    default:\n      return state;\n  }\n};\n","import { TickerData } from './types';\n\nexport enum TickersActionType {\n  SetTickerData = 'SET_TICKER_DATA',\n  AppendTickerData = 'APPEND_TICKER_DATA',\n  SetSelectedTicker = 'SET_SELECTED_TICKER',\n  SetAvailableTickers = 'SET_AVAILABLE_TICKERS',\n}\n\ninterface WithTickerName {\n  tickerName: string;\n}\nexport interface SetTickerData extends WithTickerName {\n  type: TickersActionType.SetTickerData;\n  tickersData: TickerData[];\n}\n\nexport interface AppendTickerData extends WithTickerName {\n  type: TickersActionType.AppendTickerData;\n  tickerData: TickerData;\n}\n\nexport interface SetAvailableTickers {\n  type: TickersActionType.SetAvailableTickers;\n  tickerNames: string[];\n}\n\nexport interface SetSelectedTicker {\n  type: TickersActionType.SetSelectedTicker;\n  tickerName: string;\n}\n\nexport type Action =\n  | SetTickerData\n  | AppendTickerData\n  | SetAvailableTickers\n  | SetSelectedTicker;\n","import React from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport { NavigationBar } from './NavigationBar';\n\nexport interface Props {\n  children?: JSX.Element;\n}\nexport const Page: React.FunctionComponent<Props> = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Container maxWidth=\"md\">\n        <Box className={classes.content}>{children}</Box>\n      </Container>\n    </>\n  );\n};\n\nconst useStyles = makeStyles({\n  content: {\n    height: '100vh',\n    marginTop: '20px',\n  },\n});\n","const theme = {\n  color: 'red',\n};\n\nexport default theme;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { makeStyles } from '@material-ui/core';\n\nconst aboutText =\n  'Lorem ipsum dolor sit amet consectetur adipisicing elit. Ab distinctio aliquam vel expedita fugit error aspernatur debitis officia harum, enim, nemo nesciunt? Voluptatem rerum ipsum fuga ipsam? Quasi laudantium voluptates vel ipsum facere optio nobis quo consequuntur accusamus eum tenetur sequi debitis dolores praesentium ducimus dicta nesciunt architecto molestias facilis cupiditate, ullam alias aut. Illum, quibusdam';\n\nconst aboutProject = `# Про проект\n**Stonkapps** - это веб сайт, сочетающий в себе уроки по инвестированию и финансовый симулятор, позволяющий отточить знания на данных биржи за предыдущие года. Все *просто* - сначала читай, потом пробуй. Или наоборот. На данный момент песочница позволяет тоговать акциями более 10 компаний-голубых фишек (Не знаешь что это? Тогда регистрируйся, чтобы узнать).\n`;\n\nconst history = `# Наша История\nПроект по командной разработке в универе внезапно вылился вот в это.\n\nРезультатом мы, в целом, довольны. А вы? Будем ждать вашей обратной связи.\n\n# Команда\n### Наталья Денисова\n\n[GitHub](https://github.com/fearisinternal)\n\n### Владислав Добрынин\n\n[GitHub](https://github.com/br1ghts1de)\n\n### Марк Головатских\n\n[GitHub](https://github.com/ujnomw)\n`;\n\nconst contacts = `# Контакты\n[ВКонтакте](https://www.youtube.com/watch?v=dQw4w9WgXcQ)\n\n[Email](https://www.youtube.com/watch?v=dQw4w9WgXcQ)\n\n[GitHub](https://github.com/EliteGuzhva/Bulls-Bears)`;\n\nexport const HomePage: React.FunctionComponent = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.homePage}>\n      <ReactMarkdown>{aboutProject}</ReactMarkdown>\n      <ReactMarkdown>{history}</ReactMarkdown>\n      <ReactMarkdown>{contacts}</ReactMarkdown>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  homePage: {\n    display: 'grid',\n  },\n});\n","import redaxios from 'redaxios';\nconst API_URL = process.env.REACT_APP_SERVER_URL;\nexport const login = async (username: string, password: string) => {\n  const formData = new FormData();\n  formData.append('username', username);\n  formData.append('password', password);\n  const loginUrl = 'auth/login';\n  const response = await fetch(`${API_URL}/${loginUrl}`, {\n    method: 'POST',\n    body: formData,\n  });\n\n  const responseJson = await response.json();\n  if (responseJson.token === undefined) {\n    throw new Error('Failed to get token');\n  }\n  return responseJson.token;\n};\n\nexport const register = async (\n  username: string,\n  password: string,\n  email: string\n) => {\n  const registerUrl = 'auth/register';\n  const formData = new FormData();\n  formData.append('username', username);\n  formData.append('password', password);\n  formData.append('email', email);\n  const response = await fetch(`${API_URL}/${registerUrl}`, {\n    method: 'POST',\n    body: formData,\n  });\n\n  return response.ok;\n};\n\nexport const logOut = async () => {\n  const logOutUrl = 'auth/logout';\n  await fetch(`${API_URL}/${logOutUrl}`, {\n    method: 'GET',\n  });\n};\n","export const mapTimestampToDate = (timestamp: number): Date =>\n  new Date(timestamp * 1000);\n\nexport const mapDateToTimestamp = (date: Date): number =>\n  Number(date.getTime() / 1000);\n\nexport const addMonths = (date: Date, months: number): Date => {\n  const newDate = new Date(date);\n  newDate.setMonth(newDate.getMonth() + months);\n  return newDate;\n};\n\nexport const addDays = (date: Date, days: number): Date => {\n  const newDate = new Date(date);\n  newDate.setDate(newDate.getDate() + days);\n  return newDate;\n};\n\nexport const floorHours = (date: Date): Date => {\n  const newDate = new Date(date);\n  newDate.setHours(0, 0, 0);\n  return newDate;\n};\n\nexport const ceilHours = (date: Date): Date => {\n  const newDate = new Date(date);\n  newDate.setHours(23, 59, 59);\n  return newDate;\n};\n","import {\n  ServerUser,\n  ServerTransaction,\n  ServerAsset,\n  ServerSandboxData,\n} from '../../types/serverUser';\nimport {\n  Asset,\n  SandboxData,\n  Transaction,\n  TransactionWithTicker,\n  User,\n} from '../../types/user';\nimport { mapTimestampToDate } from '../../utils/date';\n\nconst mapServerTransactionToTransaction = (ticker: string) => (\n  serverTransaction: ServerTransaction\n): TransactionWithTicker => {\n  const { operation_type, ...rest } = serverTransaction;\n  return {\n    operationType: operation_type,\n    ticker,\n    ...rest,\n  };\n};\n\nconst mapServerAssetToAsset = (serverAsset: ServerAsset): Asset => {\n  const { transactions, ticker, ...rest } = serverAsset;\n  const mapTransactionToTransactionWithTicker = mapServerTransactionToTransaction(\n    ticker\n  );\n  return {\n    ticker,\n    transactions: transactions.map(mapTransactionToTransactionWithTicker),\n    ...rest,\n  };\n};\n\nconst mapServerSandboxDataToSandboxData = (\n  serverSandboxData: ServerSandboxData\n): SandboxData => {\n  const { assets, balance, virtual_current, virtual_start } = serverSandboxData;\n  return {\n    assets: assets.map(mapServerAssetToAsset),\n    balance,\n    currentTime: mapTimestampToDate(virtual_current),\n    startTime: mapTimestampToDate(virtual_start),\n  };\n};\n\nexport const mapServerUserToUser = (serverUser: ServerUser): User => {\n  const { sandbox_data, ...rest } = serverUser;\n  return {\n    ...rest,\n    sandboxData: mapServerSandboxDataToSandboxData(sandbox_data),\n  };\n};\n","import { ServerUser } from '../types/serverUser';\nimport { OperationType, User } from '../types/user';\nimport { addDays, mapDateToTimestamp } from '../utils/date';\nimport { mapServerUserToUser } from './helpers/users';\n\nconst API_URL = process.env.REACT_APP_SERVER_URL;\nexport const getUser = async (token: string): Promise<User> => {\n  const response = await fetch(`${API_URL}/db/get_user`, {\n    method: 'GET',\n    headers: {\n      'x-access-tokens': token,\n    },\n  });\n  const responseJson: ServerUser | { message: string } = await response.json();\n  if ('message' in responseJson) {\n    throw new Error(responseJson.message);\n  }\n  const user = mapServerUserToUser(responseJson);\n  console.log(`New user current time: ${user.sandboxData.currentTime}`);\n  return user;\n};\n\nexport const performTransaction = async (params: {\n  token: string;\n  operationType: OperationType;\n  amount: number;\n  price: number;\n  ticker: string;\n}): Promise<User> => {\n  const { token, operationType, amount, price, ticker } = params;\n  const formData = new FormData();\n  formData.append('ticker', ticker);\n  formData.append('operation_type', operationType);\n  formData.append('price', String(price));\n  formData.append('amount', String(amount));\n  const response = await fetch(`${API_URL}/db/sandbox_transaction`, {\n    method: 'POST',\n    headers: {\n      'x-access-tokens': token,\n    },\n    body: formData,\n  });\n  const responseJson: ServerUser = await response.json();\n  const user = mapServerUserToUser(responseJson);\n  console.log(`New user current time: ${user.sandboxData.currentTime}`);\n  return user;\n};\n\nexport const sandboxStep = async (params: {\n  token: string;\n  currentTime: Date;\n}) => {\n  const { token, currentTime } = params;\n  const newTime = String(mapDateToTimestamp(addDays(currentTime, 1)));\n  console.log(`Sandbox step: ${newTime}`);\n  const formData = new FormData();\n  formData.append('virtual_current', newTime);\n  const response = await fetch(`${API_URL}/db/sandbox_step`, {\n    method: 'POST',\n    headers: {\n      'x-access-tokens': token,\n    },\n    body: formData,\n  });\n  const responseJson: ServerUser = await response.json();\n  const user = mapServerUserToUser(responseJson);\n  console.log(`New user current time: ${user.sandboxData.currentTime}`);\n  return user;\n};\n\nexport const sandboxInit = async (params: {\n  token: string;\n  currentTime: Date;\n  balance: number;\n}) => {\n  const { token, currentTime, balance } = params;\n  const newTime = String(mapDateToTimestamp(addDays(currentTime, 0)));\n  const formData = new FormData();\n  formData.append('virtual_start', newTime);\n  formData.append('balance', String(balance));\n  const response = await fetch(`${API_URL}/db/sandbox_init`, {\n    method: 'POST',\n    headers: {\n      'x-access-tokens': token,\n    },\n    body: formData,\n  });\n  const responseJson: ServerUser | { message: string } = await response.json();\n  if ('message' in responseJson) {\n    throw new Error(responseJson.message);\n  }\n  const user = mapServerUserToUser(responseJson);\n  console.log(`New user current time: ${user.sandboxData.currentTime}`);\n  return user;\n};\n","import { useState } from 'react';\nimport { useContext } from 'react';\nimport { useMemo } from 'react';\nimport { useEffect } from 'react';\nimport { createContext, ReactNode } from 'react';\nimport * as sessions from '../api/sessions';\nimport * as users from '../api/users';\nimport { OperationType, User } from '../types/user';\n\ninterface TransactionParams {\n  operationType: OperationType;\n  amount: number;\n  price: number;\n  ticker: string;\n}\n\ninterface AuthContextType {\n  token?: string;\n  user?: User;\n  loading: boolean;\n  login(username: string, password: string): Promise<void>;\n  register(username: string, password: string, email: string): Promise<void>;\n  logout(): Promise<void>;\n  sandboxTransaction(params: TransactionParams): Promise<void>;\n  sandboxStep(): Promise<void>;\n  sandboxInit(balance: number, date: Date): Promise<void>;\n}\n// eslint-disable\nconst AuthContext = createContext<Partial<AuthContextType>>({});\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [token, setToken] = useState<string>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingInitial, setLoadingInitial] = useState<boolean>(true);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const lsTocken = localStorage.getItem('bnb_auth');\n    if (lsTocken !== null) {\n      users\n        .getUser(lsTocken)\n        .then((user) => setUser(user))\n        .catch((_error) => {\n          localStorage.removeItem('bnb_auth');\n        })\n        .finally(() => {\n          setToken(lsTocken);\n          setLoadingInitial(false);\n        });\n    }\n    setLoadingInitial(false);\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    setLoading(true);\n    const sessionToken = await sessions.login(username, password);\n    setToken(sessionToken);\n    localStorage.setItem('bnb_auth', sessionToken);\n    const userByToken = await users.getUser(sessionToken);\n    setUser(userByToken);\n    setLoading(false);\n  };\n  const register = async (\n    username: string,\n    password: string,\n    email: string\n  ) => {\n    setLoading(true);\n    const ok = await sessions.register(username, password, email);\n    setLoading(false);\n  };\n\n  const logout = async () => {\n    sessions.logOut();\n    localStorage.removeItem('bnb_auth');\n    setUser(undefined);\n  };\n\n  const sandboxTransaction = async (params: TransactionParams) => {\n    setLoading(true);\n    const userAfterTransaction = await users.performTransaction({\n      ...params,\n      token: String(token),\n    });\n    setUser(userAfterTransaction);\n    setLoading(false);\n  };\n\n  const sandboxStep = async () => {\n    if (user && token) {\n      setLoading(true);\n      const userAfterStep = await users.sandboxStep({\n        token,\n        currentTime: user.sandboxData.currentTime,\n      });\n      setUser(userAfterStep);\n      setLoading(false);\n    }\n  };\n\n  const sandboxInit = async (balance: number, date: Date) => {\n    if (user !== undefined && token) {\n      setLoading(true);\n      const userAfterInit = await users.sandboxInit({\n        token,\n        currentTime: date,\n        balance,\n      });\n      setUser(userAfterInit);\n      setLoading(false);\n    }\n  };\n  const memoedValue = useMemo(\n    () => ({\n      token,\n      login,\n      loading,\n      register,\n      user,\n      logout,\n      sandboxTransaction,\n      sandboxStep,\n      sandboxInit,\n    }),\n    [token, loading, user]\n  );\n\n  return (\n    <AuthContext.Provider value={memoedValue}>\n      {!loadingInitial && children}\n    </AuthContext.Provider>\n  );\n};\nconst useAuth = () => useContext(AuthContext);\nexport default useAuth;\n","import { useHistory } from 'react-router-dom';\n\nexport const useHistorySetter = (url: string) => {\n  let history = useHistory();\n  const setHistory = () => {\n    history.push(`${url}`);\n  };\n  return setHistory;\n};\n","import React from 'react';\nimport {\n  Button,\n  makeStyles,\n  Menu,\n  MenuItem,\n  TypographyVariant,\n} from '@material-ui/core';\nimport useAuth from '../context/useAuth';\nimport { User } from '../types/user';\n\nexport interface UserInfoProps {\n  user: User;\n  logout(): Promise<void>;\n}\nexport const UserInfo: React.FunctionComponent<UserInfoProps> = ({\n  user: {\n    username,\n    sandboxData: { balance },\n  },\n  logout,\n}) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleLogOut = () => {\n    setAnchorEl(null);\n    logout();\n  };\n  return (\n    <div>\n      <Button color=\"inherit\" onClick={handleClick}>\n        {username}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(null)}\n      >\n        <MenuItem onClick={handleLogOut}>Log out</MenuItem>\n      </Menu>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({});\n","import { Button, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useAuth from '../context/useAuth';\nimport { useHistorySetter } from '../custom-hooks/useHistorySetter';\nimport { UserInfo } from './UserInfo';\n\nconst useStyles = makeStyles({\n  account: {},\n});\n\nexport const Account: React.FunctionComponent = () => {\n  const classes = useStyles();\n  const setHistory = useHistorySetter('/sign-in');\n  const { user, logout } = useAuth();\n  return user !== undefined && logout !== undefined ? (\n    <UserInfo user={user} logout={logout} />\n  ) : (\n    <Button color=\"inherit\" onClick={setHistory}>\n      Login/Register\n    </Button>\n  );\n};\n","import { Button, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  links: {\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n  link: {\n    textDecoration: 'none',\n    color: '#fff',\n  },\n});\n\ninterface LinkEntity {\n  name: string;\n  url: string;\n}\n\nconst links: LinkEntity[] = [\n  {\n    name: 'Home',\n    url: '/home',\n  },\n  {\n    name: 'Education',\n    url: '/education',\n  },\n  {\n    name: 'Sandbox',\n    url: '/sandbox',\n  },\n];\n\nexport const Links: React.FunctionComponent = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.links}>\n      {links.map(({ name, url }) => (\n        <Typography variant=\"h6\">\n          <Link to={url} className={classes.link}>\n            <Button color=\"inherit\">{name}</Button>\n          </Link>\n        </Typography>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport interface Props {}\nexport const Logo: React.FunctionComponent<Props> = (props) => {\n  return <div>BNB</div>;\n};\n","import { AppBar, Toolbar, Typography, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { Account } from './Account';\nimport { Links } from './Links';\nimport { Logo } from './Logo';\n\nexport interface Props {}\nexport const NavigationBar: React.FunctionComponent<Props> = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\" className={classes.toolbar}>\n          <Logo />\n          <Links />\n          <Account />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 2fr 1fr',\n  },\n});\n","import {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport React, { useCallback } from 'react';\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom';\nimport { LessonDataId } from '../../store/education';\n\nexport interface EducationLessonPreviewProps {\n  id: string;\n  title: string;\n  description: string;\n  media?: string;\n  data: LessonDataId;\n}\n\nexport const EducationLessonPreview: React.FunctionComponent<EducationLessonPreviewProps> = ({\n  title,\n  description,\n  media,\n  id,\n  data,\n}) => {\n  const classes = useStyles();\n  let { url } = useRouteMatch();\n  let history = useHistory();\n  const handleLessonClick = useCallback(() => {\n    history.push(`${url}/${data}`);\n  }, [history, data]);\n  return (\n    <Card>\n      <CardActionArea onClick={handleLessonClick}>\n        <CardMedia className={classes.media} image={media} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nconst useStyles = makeStyles({\n  media: {\n    height: '100px',\n    width: '200px',\n  },\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport {\n  EducationLessonPreview,\n  EducationLessonPreviewProps,\n} from './EducationLessonPreview';\n\nexport interface EducationLessonPreviewRowProps {\n  lessons: EducationLessonPreviewProps[];\n}\nexport const EducationLessonPreviewRow: React.FunctionComponent<EducationLessonPreviewRowProps> = (\n  props\n) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.row}>\n      {props.lessons.map((lesson) => (\n        <EducationLessonPreview key={lesson.id} {...lesson} />\n      ))}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  row: {\n    display: 'flex',\n    flexGrow: 1,\n    gap: '10px',\n    margin: '5px',\n  },\n});\n","import { Paper, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { EducationLessonPreviewProps } from './EducationLessonPreview';\nimport { EducationLessonPreviewRow } from './EducationLessonsPreviewRow';\nexport interface EducationLevelProps {\n  levelName: string;\n  lessons: EducationLessonPreviewProps[];\n}\nexport const EducationLevel: React.FunctionComponent<EducationLevelProps> = ({\n  levelName,\n  lessons,\n}) => (\n  <Paper>\n    <Typography variant=\"subtitle1\">{`${levelName.toUpperCase()}`}</Typography>\n    <EducationLessonPreviewRow lessons={lessons} />\n  </Paper>\n);\n","import { Lesson, LessonForLevel, Level } from '../../../store/education';\n\nexport const mapLessonToLessonForLevel = ({\n  _id: id,\n  data,\n  index,\n  description,\n  title,\n  photo_url,\n}: Lesson): LessonForLevel => ({\n  id,\n  data,\n  title,\n  description,\n  index,\n  media: photo_url,\n});\n\nexport const getLevelFromLessons = (\n  levelName: string,\n  lessons: Lesson[]\n): Level => {\n  const lessonsForLevel = lessons\n    .filter((lesson) => lesson.level_name === levelName)\n    .sort((a, b) => a.index - b.index)\n    .map(mapLessonToLessonForLevel);\n  return {\n    levelName,\n    lessons: lessonsForLevel,\n  };\n};\n","import { createSelector } from 'reselect';\nimport { LessonDataId, Level } from '../../store/education';\nimport { RootState } from '../../store/types';\nimport { getLevelFromLessons } from './utils/get-level-from-lessons';\n\nexport const getLessons = createSelector(\n  (state: RootState) => state.education.lessons,\n  (result) => result\n);\n\nexport const getLevelNames = createSelector(getLessons, (lessons) =>\n  lessons.reduce(\n    (acc, { level_name }) => acc.add(level_name),\n    new Set<string>([])\n  )\n);\n\nexport const getLevels = createSelector(\n  getLevelNames,\n  getLessons,\n  (levelNames, lessons) =>\n    Array.from(levelNames).reduce<Level[]>(\n      (acc, levelName) => [...acc, getLevelFromLessons(levelName, lessons)],\n      []\n    )\n);\n\nexport const getLessonDataByLessonDataId = (\n  state: RootState,\n  lessonDataId: LessonDataId\n) => {\n  return state.education.lessonsData.find((ld) => ld.id === lessonDataId);\n};\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { EducationLevel, EducationLevelProps } from './EducationLevel';\nimport { EducationLessonPreviewProps } from './EducationLessonPreview';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllLessons } from '../../store/education/actions';\nimport { getLevels } from '../../selectors/education/education';\n\nexport interface EducationPageProps {}\n\n// export const testProps: EducationPageProps = {\n//   levels: [\n//     {\n//       levelName: '1',\n//       lessons: [\n//         { title: 'Lesson', description: 'Description ' },\n//         { title: 'Lesson', description: 'Description ' },\n//         { title: 'Lesson', description: 'Description ' },\n//       ],\n//     },\n//   ],\n// };\n\nexport const EducationPage: React.FunctionComponent<EducationPageProps> = (\n  props\n) => {\n  const [rawLessons, setRawLessons] = useState<EducationLessonPreviewProps[]>(\n    []\n  );\n  const dispatch = useDispatch();\n  const levels = useSelector(getLevels);\n  useEffect(() => {\n    if (levels.length === 0) {\n      dispatch(getAllLessons());\n    }\n  }, [levels]);\n  const classes = useStyles();\n  if (levels !== undefined) {\n    return (\n      <div className={classes.container}>\n        {levels.map((levelData) => (\n          <EducationLevel {...levelData} key={levelData.levelName} />\n        ))}\n      </div>\n    );\n  } else return null;\n};\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '40px',\n  },\n});\n","import { GetTickerResponse, TickerData } from '../types';\n\nexport const mapGetTickerResponseToTickerDataArray = (\n  response: GetTickerResponse\n): TickerData[] =>\n  Object.entries(response).map(([timestamp, { Close, High, Low, Open }]) => ({\n    date: new Date(Number(timestamp) * 1000),\n    close: Close,\n    high: High,\n    low: Low,\n    open: Open,\n  }));\n","export enum OperationType {\n  Buy = 'BUY',\n  Sell = 'SELL',\n}\nexport interface Transaction {\n  amount: number;\n  commission: number;\n  operationType: OperationType;\n  timestamp: number;\n  price: number;\n}\nexport interface Asset {\n  amount: number;\n  ticker: string;\n  transactions: TransactionWithTicker[];\n}\nexport interface SandboxData {\n  assets: Asset[];\n  balance: number;\n  currentTime: Date;\n  startTime: Date;\n}\n\nexport interface User {\n  username: string;\n  sandboxData: SandboxData;\n  email: string;\n}\n\nexport interface TransactionWithTicker {\n  amount: number;\n  commission: number;\n  operationType: OperationType;\n  timestamp: number;\n  price: number;\n  ticker: string;\n}\n","import { AnyAction } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { floorHours, mapDateToTimestamp } from '../../utils/date';\nimport {\n  AppendTickerData,\n  SetAvailableTickers,\n  SetSelectedTicker,\n  SetTickerData,\n  TickersActionType,\n} from './action-types';\nimport { GetTickerResponse, TickerData } from './types';\nimport { mapGetTickerResponseToTickerDataArray } from './utils/map-rest-to-model';\n\nconst API_URL = process.env.REACT_APP_SERVER_URL;\n\nexport const setTickerData = (\n  tickerName: string,\n  tickersData: TickerData[]\n): SetTickerData => ({\n  type: TickersActionType.SetTickerData,\n  tickersData: tickersData,\n  tickerName,\n});\n\nexport const appendTickerData = (\n  tickerName: string,\n  tickerData: TickerData\n): AppendTickerData => ({\n  type: TickersActionType.AppendTickerData,\n  tickerData,\n  tickerName,\n});\n\nexport const setSelectedTicker = (tickerName: string): SetSelectedTicker => ({\n  type: TickersActionType.SetSelectedTicker,\n  tickerName,\n});\n\nexport const setAvailableTickers = (\n  tickerNames: string[]\n): SetAvailableTickers => ({\n  type: TickersActionType.SetAvailableTickers,\n  tickerNames,\n});\n\nexport const getAllTickerHistory = (\n  tickerName: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => async (dispatch) => {\n  const response = await fetch(\n    `${API_URL}/fin/get_all_ticker_history?ticker=${tickerName}`\n  );\n\n  const responseJson: GetTickerResponse = await response.json();\n  dispatch(\n    setTickerData(\n      tickerName,\n      mapGetTickerResponseToTickerDataArray(responseJson)\n    )\n  );\n};\n\nexport const getTickerHistory = (\n  tickerName: string,\n  begin: Date,\n  end: Date\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => async (dispatch) => {\n  const beginTimestamp = begin.getTime() / 1000;\n  const endTimestamp = floorHours(end).getTime() / 1000;\n  const response = await fetch(\n    `${API_URL}/fin/get_ticker_history?ticker=${tickerName}&begin=${beginTimestamp}&end=${endTimestamp}`\n  );\n\n  const responseJson: GetTickerResponse = await response.json();\n  dispatch(\n    setTickerData(\n      tickerName,\n      mapGetTickerResponseToTickerDataArray(responseJson)\n    )\n  );\n};\n\nexport const addTickerHistory = (\n  tickerName: string,\n  begin: Date,\n  end: Date\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => async (dispatch) => {\n  console.log(`Add ticker from ${begin} to ${end}`);\n  const beginTimestamp = begin.getTime() / 1000;\n  const endTimestamp = end.getTime() / 1000;\n  const response = await fetch(\n    `${API_URL}/fin/get_ticker_history?ticker=${tickerName}&begin=${beginTimestamp}&end=${endTimestamp}`\n  );\n\n  const responseJson: GetTickerResponse = await response.json();\n  const tickersData = mapGetTickerResponseToTickerDataArray(\n    responseJson\n  ).filter(({ date }) => date >= begin);\n  tickersData.forEach((d) => console.log(d.date));\n  const addValue = tickersData[0];\n  if (tickersData.length !== 0) {\n    dispatch(appendTickerData(tickerName, addValue));\n  }\n};\n\nexport const loadAvailableTickers = (\n  date: Date\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => async (dispatch) => {\n  const timestamp = mapDateToTimestamp(date);\n  const response = await fetch(\n    `${API_URL}/fin/get_existing_tickers?time=${timestamp}`\n  );\n  const responseJson: { tickers: string[] } = await response.json();\n  dispatch(setAvailableTickers(responseJson.tickers));\n};\n","/**\n * Types for tickers store\n */\n\nexport interface TickerData {\n  date: Date;\n  close: number;\n  high: number;\n  low: number;\n  open: number;\n}\n\nexport interface Tickers {\n  [tickerName: string]: TickerData[];\n}\n\nexport interface State {\n  tickersData: Tickers;\n  availableTickerNames: string[];\n  selectedTicker: string;\n}\n\nexport const initialState: State = {\n  tickersData: {},\n  availableTickerNames: [],\n  selectedTicker: 'AAPL',\n};\n\n/**\n * Types related to REST api responses\n */\nexport interface TickerDataResponse {\n  Close: number;\n  Dividends: number;\n  High: number;\n  Low: number;\n  Open: number;\n  'Stock Splits': number;\n  Volume: number;\n}\nexport interface GetTickerResponse {\n  [timestamp: string]: TickerDataResponse;\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { RootState } from './types';\nimport { education } from './education';\nimport { tickers } from './tickers';\n\nexport default createStore(\n  combineReducers<RootState>({ education, tickers }),\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import { Action, TickersActionType } from './action-types';\nimport { initialState, State } from './types';\n\nexport const tickers = (state: State = initialState, action: Action): State => {\n  switch (action.type) {\n    case TickersActionType.SetTickerData:\n      return {\n        ...state,\n        tickersData: {\n          ...state.tickersData,\n          [action.tickerName]: action.tickersData,\n        },\n      };\n\n    case TickersActionType.AppendTickerData:\n      const { tickerName, tickerData } = action;\n      return {\n        ...state,\n        tickersData: {\n          ...state.tickersData,\n          [tickerName]: [...state.tickersData[tickerName], tickerData],\n        },\n      };\n\n    case TickersActionType.SetAvailableTickers:\n      return {\n        ...state,\n        availableTickerNames: action.tickerNames,\n      };\n\n    case TickersActionType.SetSelectedTicker:\n      return {\n        ...state,\n        selectedTicker: action.tickerName,\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { makeStyles, Tab, Tabs } from '@material-ui/core';\n\nexport interface EducationLessonTabsProps {\n  handleChange(event: React.ChangeEvent<{}>, newValue: number): void;\n  tabsLabels: string[];\n  value: number;\n}\nexport const EducationLessonTabs: React.FunctionComponent<EducationLessonTabsProps> = ({\n  handleChange,\n  tabsLabels,\n  value,\n}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n      >\n        {tabsLabels.map((label) => (\n          <Tab label={label} />\n        ))}\n      </Tabs>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  container: {\n    backgroundColor: '#fefefe',\n  },\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport ReactMarkdown from 'react-markdown';\nimport { EmotionJSX } from '@emotion/react/types/jsx-namespace';\n\nexport interface EducationLessonSlideProps {\n  media: string[];\n  text: string;\n  renderButtons(): EmotionJSX.Element;\n}\nexport const EducationLessonSlide: React.FunctionComponent<EducationLessonSlideProps> = ({\n  media,\n  text,\n  renderButtons,\n}) => {\n  const classes = useStyles();\n  const renderMedia = () => (\n    <div>\n      {media.map((url) => (\n        <img src={url} width={500}></img>\n      ))}\n    </div>\n  );\n  return (\n    <div>\n      {media.length > 0 && renderMedia()}\n      <ReactMarkdown>{text}</ReactMarkdown>\n      {renderButtons()}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({});\n","import React from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\n\nexport interface EducationLessonTabPanelProps {\n  value: number;\n  index: number;\n  children?: React.ReactNode;\n}\nexport const EducationLessonTabPanel: React.FunctionComponent<EducationLessonTabPanelProps> = ({\n  value,\n  index,\n  children,\n}) => {\n  const classes = useStyles();\n  return (\n    <div role=\"tabpanel\" hidden={value !== index}>\n      {value === index && <Typography>{children}</Typography>}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({});\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Button, CircularProgress, makeStyles } from '@material-ui/core';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store/types';\nimport { getLessonData, LessonDataId } from '../../store/education';\nimport { getLessonDataByLessonDataId } from '../../selectors/education/education';\nimport { EducationLessonTabs } from './EducationLessonTabs';\nimport { EducationLessonSlide } from './EducationLessonSlide';\nimport { EducationLessonTabPanel } from './EducationLessonTabPanel';\n\nexport interface EducationLessonProps {}\n\nexport const EducationLesson: React.FunctionComponent<EducationLessonProps> = (\n  props\n) => {\n  const classes = useStyles();\n  const [tab, setTab] = useState(0);\n  let history = useHistory();\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<{}>, newValue: number) => {\n      setTab(newValue);\n    },\n    [setTab]\n  );\n  const nextSlide = () => {\n    setTab(tab + 1);\n  };\n  const previousSlide = () => {\n    setTab(tab - 1);\n  };\n  const goBack = () => {\n    history.goBack();\n  };\n  const { lessonDataId } = useParams<{ lessonDataId: LessonDataId }>();\n  const dispatch = useDispatch();\n  const lessonData = useSelector((state: RootState) =>\n    getLessonDataByLessonDataId(state, lessonDataId)\n  );\n  useEffect(() => {\n    if (lessonData === undefined) {\n      dispatch(getLessonData(lessonDataId));\n    }\n  }, [lessonData]);\n\n  const tabsLabels = useMemo(\n    () =>\n      lessonData === undefined\n        ? []\n        : lessonData.slides.map((slide) => `Slide ${slide.slideNumber}`),\n    [lessonData]\n  );\n  const renderButtons = () => (\n    <div className={classes.buttons}>\n      <Button onClick={previousSlide} disabled={tab < 1}>\n        Prev\n      </Button>\n      <Button onClick={nextSlide} disabled={tab > tabsLabels.length - 2}>\n        Next\n      </Button>\n    </div>\n  );\n  return (\n    <div>\n      {lessonData !== undefined ? (\n        <>\n          <Button onClick={goBack} className={classes.goBack}>\n            Go Back\n          </Button>\n          <div className={classes.root}>\n            <div>\n              <EducationLessonTabs\n                handleChange={handleChange}\n                value={tab}\n                tabsLabels={tabsLabels}\n              />\n            </div>\n            <div>\n              {lessonData.slides.map(({ slideNumber, ...slideProps }) => (\n                <EducationLessonTabPanel\n                  value={tab}\n                  key={slideNumber - 1}\n                  index={slideNumber - 1}\n                >\n                  <EducationLessonSlide\n                    {...slideProps}\n                    renderButtons={renderButtons}\n                  />\n                </EducationLessonTabPanel>\n              ))}\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className={classes.progress}>\n          <CircularProgress />\n        </div>\n      )}\n    </div>\n  );\n};\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    gap: '10px',\n  },\n  goBack: {\n    marginLeft: '35px',\n  },\n  progress: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'space-around',\n  },\n});\n","import React from 'react';\nimport { makeStyles, TextField } from '@material-ui/core';\n\nexport interface UsernameProps {\n  handleChange(event: React.ChangeEvent<HTMLInputElement>): void;\n  value?: string;\n}\nexport const Username: React.FunctionComponent<UsernameProps> = ({\n  value,\n  handleChange,\n}) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      variant=\"outlined\"\n      value={value}\n      onChange={handleChange}\n      label=\"Username\"\n    />\n  );\n};\n\nconst useStyles = makeStyles({});\n","import React from 'react';\nimport { makeStyles, TextField } from '@material-ui/core';\n\nexport interface PasswordProps {\n  handleChange(event: React.ChangeEvent<HTMLInputElement>): void;\n  value?: string;\n}\nexport const Password: React.FunctionComponent<PasswordProps> = ({\n  value,\n  handleChange,\n}) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      variant=\"outlined\"\n      value={value}\n      onChange={handleChange}\n      label=\"Password\"\n      type=\"password\"\n    />\n  );\n};\n\nconst useStyles = makeStyles({});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nexport interface AuthWrapperProps {\n  children?: JSX.Element[];\n}\nexport const AuthWrapper: React.FunctionComponent<AuthWrapperProps> = ({\n  children,\n}) => {\n  const classes = useStyles();\n  return <div className={classes.container}>{children}</div>;\n};\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    gap: '10px',\n    marginTop: '50px',\n  },\n});\n","import React from 'react';\nimport { Button, makeStyles, TextField } from '@material-ui/core';\nimport { useState } from 'react';\nimport { Username } from './Username';\nimport { Password } from './Password';\nimport { AuthWrapper } from './AuthWrapper';\nimport { useHistorySetter } from '../../custom-hooks/useHistorySetter';\nimport useAuth from '../../context/useAuth';\n\nexport interface SignInProps {}\nexport const SignIn: React.FunctionComponent<SignInProps> = (props) => {\n  const [username, setUserName] = useState<string>();\n  const [password, setPassword] = useState<string>();\n  const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setUserName(event.target.value);\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setPassword(event.target.value);\n  const setHistory = useHistorySetter('/sign-up');\n  const setHome = useHistorySetter('/home');\n  const { login } = useAuth();\n  const handleLogin = async () => {\n    if (username && password && login) {\n      await login(username, password);\n      setHome();\n    }\n  };\n  return (\n    <AuthWrapper>\n      <Username value={username} handleChange={handleUsernameChange} />\n      <Password value={password} handleChange={handlePasswordChange} />\n      <Button onClick={handleLogin}>Log In</Button>\n      <Button onClick={setHistory}>I am a new member</Button>\n    </AuthWrapper>\n  );\n};\n","import React from 'react';\nimport { makeStyles, TextField } from '@material-ui/core';\n\nexport interface EmailProps {\n  handleChange(event: React.ChangeEvent<HTMLInputElement>): void;\n  value?: string;\n}\nexport const Email: React.FunctionComponent<EmailProps> = ({\n  value,\n  handleChange,\n}) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      variant=\"outlined\"\n      value={value}\n      onChange={handleChange}\n      label=\"Email\"\n      type=\"email\"\n    />\n  );\n};\n\nconst useStyles = makeStyles({});\n","import React, { useState } from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { AuthWrapper } from './AuthWrapper';\nimport { Username } from './Username';\nimport { Password } from './Password';\nimport { Email } from './Email';\nimport { useHistorySetter } from '../../custom-hooks/useHistorySetter';\nimport useAuth from '../../context/useAuth';\nimport { useCallback } from 'react';\n\nexport interface SignUpProps {}\nexport const SignUp: React.FunctionComponent<SignUpProps> = (props) => {\n  const classes = useStyles();\n  const [username, setUserName] = useState<string>();\n  const [password, setPassword] = useState<string>();\n  const [email, setEmail] = useState<string>();\n  const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setUserName(event.target.value);\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setPassword(event.target.value);\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setEmail(event.target.value);\n  const setHistory = useHistorySetter('/sign-in');\n  const { register, loading } = useAuth();\n  const handleSingUp = useCallback(async () => {\n    if (register && password && username && email && loading === false) {\n      await register(username, password, email);\n      if (loading === false) {\n        setHistory();\n      }\n    }\n  }, [register, password, username, email]);\n  return (\n    <AuthWrapper>\n      <Username value={username} handleChange={handleUsernameChange} />\n      <Password value={password} handleChange={handlePasswordChange} />\n      <Email value={email} handleChange={handleEmailChange} />\n      <Button onClick={handleSingUp}>Join</Button>\n      <Button onClick={setHistory}>I have got my account already</Button>\n    </AuthWrapper>\n  );\n};\n\nconst useStyles = makeStyles({});\n","import { createSelector } from 'reselect';\nimport { RootState } from '../../store/types';\nexport const getTickerData = createSelector(\n  (state: RootState) => state.tickers.tickersData,\n  (_: RootState, tickerName: string) => tickerName,\n  (tickersData, tickerName) =>\n    tickerName in tickersData ? tickersData[tickerName] : undefined\n);\n\nexport const getSelectedTicker = (state: RootState) =>\n  state.tickers.selectedTicker;\n\nexport const getLastTickerData = (state: RootState, tickerName: string) => {\n  const data = getTickerData(state, tickerName);\n  if (data) {\n    return [...data].pop();\n  }\n};\n\nexport const getAvailableTickers = (state: RootState) =>\n  state.tickers.availableTickerNames;\n","import React from 'react';\nimport { TickerData } from '../../store/tickers';\nimport { Chart } from 'react-google-charts';\ninterface TickerChartProps {\n  data: TickerData[];\n  tickerName: string;\n}\n\nexport const TickerChart: React.FunctionComponent<TickerChartProps> = ({\n  data,\n  tickerName,\n}) => {\n  const dataToDisplay = [\n    ['day', 'a', 'b', 'c', 'd'],\n    ...data.map(({ date, open, low, high, close }) => [\n      date,\n      low,\n      open,\n      close,\n      high,\n    ]),\n  ];\n  return (\n    <Chart\n      height={500}\n      data={dataToDisplay}\n      chartType=\"CandlestickChart\"\n      options={{\n        title: tickerName,\n        legend: 'none',\n      }}\n      rootProps={{ 'data-testid': '1' }}\n      controls={[\n        {\n          controlType: 'ChartRangeFilter',\n          options: {\n            filterColumnIndex: 0,\n            ui: {\n              chartType: 'LineChart',\n              chartOptions: {\n                chartArea: { width: '90%', height: '20%' },\n                hAxis: { baselineColor: 'none' },\n              },\n            },\n          },\n          controlPosition: 'bottom',\n          controlWrapperParams: {\n            state: {\n              range: {\n                start: data[0].date,\n                end: data[data.length - 1].date,\n              },\n            },\n          },\n        },\n      ]}\n    />\n  );\n};\n","import React, { useEffect } from 'react';\nimport { CircularProgress, makeStyles } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getSelectedTicker,\n  getTickerData,\n} from '../../selectors/tickers/tickers';\nimport { RootState } from '../../store/types';\nimport useAuth from '../../context/useAuth';\nimport { addTickerHistory, getTickerHistory } from '../../store/tickers';\nimport { TickerChart } from './TickerChart';\nimport { addDays, addMonths, ceilHours, floorHours } from '../../utils/date';\n\nexport interface ChartRouterProps {}\nexport const ChartRouter: React.FunctionComponent<ChartRouterProps> = (\n  props\n) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const tickerName = useSelector(getSelectedTicker);\n  const data = useSelector((state: RootState) =>\n    getTickerData(state, tickerName)\n  );\n  const { user } = useAuth();\n  const current = user?.sandboxData.currentTime;\n  // set initial chart data\n  useEffect(() => {\n    if (data === undefined && current !== undefined) {\n      const monthBefore = addMonths(current, -3);\n      dispatch(getTickerHistory(tickerName, monthBefore, addDays(current, 1)));\n    }\n  }, [data, tickerName, dispatch, current]);\n  // add ticker data by current update\n  useEffect(() => {\n    if (data !== undefined && current !== undefined) {\n      const begin = current;\n      const end = addDays(current, 1);\n      dispatch(addTickerHistory(tickerName, begin, end));\n    }\n  }, [current]);\n  return (\n    <div className={classes.container}>\n      {data !== undefined ? (\n        <TickerChart data={data} tickerName={tickerName} />\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  container: {\n    height: '600px',\n  },\n});\n","import React from 'react';\nimport { Button, makeStyles, TextField, Typography } from '@material-ui/core';\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport { useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { useSandboxInit } from '../../custom-hooks/useSandboxInit';\n\nexport interface SandboxInitProps {}\nexport const SandboxInit: React.FunctionComponent<SandboxInitProps> = (\n  props\n) => {\n  const classes = useStyles();\n\n  const {\n    amount,\n    selectedDate,\n    handleAmountChange,\n    handleDateChange,\n    handleInitClick,\n  } = useSandboxInit();\n  return (\n    <div className={classes.container}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Typography variant=\"subtitle1\">\n          Please specify sandbox environment\n        </Typography>\n        <KeyboardDatePicker\n          className={classes.sameWidth}\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"Virtual start date\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </MuiPickersUtilsProvider>\n      <TextField\n        type=\"number\"\n        value={amount}\n        onChange={handleAmountChange}\n        label=\"Balance\"\n      />\n      <Button className={classes.sameWidth} onClick={handleInitClick}>\n        Create sandbox\n      </Button>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '10px',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  sameWidth: {\n    width: '166px',\n  },\n});\n","import { useState } from 'react';\nimport useAuth from '../context/useAuth';\n\nexport const useSandboxInit = () => {\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\n  const handleDateChange = (date: Date | null) => {\n    setSelectedDate(date);\n  };\n  const [amount, setAmount] = useState(0);\n  const handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = Number(event.target.value);\n    setAmount(val);\n  };\n  const { sandboxInit, loading } = useAuth();\n  const handleInitClick = async () => {\n    if (\n      sandboxInit !== undefined &&\n      amount !== undefined &&\n      selectedDate !== null\n    ) {\n      await sandboxInit(amount, selectedDate);\n    }\n  };\n  return {\n    amount,\n    selectedDate,\n    handleAmountChange,\n    handleDateChange,\n    handleInitClick,\n    loading,\n  };\n};\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport useAuth from '../context/useAuth';\nimport {\n  getLastTickerData,\n  getSelectedTicker,\n} from '../selectors/tickers/tickers';\nimport { RootState } from '../store/types';\nimport { OperationType } from '../types/user';\n\nexport const useTransactionsHook = () => {\n  const [amount, setAmount] = useState(0);\n  const { sandboxTransaction, loading } = useAuth();\n  const ticker = useSelector(getSelectedTicker);\n  const lastTickerData = useSelector((state: RootState) =>\n    getLastTickerData(state, ticker)\n  );\n  const handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.target.value);\n    setAmount((prev) => newValue);\n  };\n\n  const handleBuyClick = async () => {\n    if (sandboxTransaction !== undefined && lastTickerData) {\n      await sandboxTransaction({\n        operationType: OperationType.Buy,\n        price: lastTickerData.close,\n        amount,\n        ticker,\n      });\n    }\n  };\n\n  const handleSellClick = async () => {\n    if (sandboxTransaction !== undefined && lastTickerData) {\n      await sandboxTransaction({\n        operationType: OperationType.Sell,\n        price: lastTickerData.close,\n        amount,\n        ticker,\n      });\n    }\n  };\n\n  return {\n    amount,\n    handleAmountChange,\n    handleBuyClick,\n    handleSellClick,\n  };\n};\n","import React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport useAuth from '../../context/useAuth';\n\nexport interface SandboxStepProps {}\nexport const SandboxStep: React.FunctionComponent<SandboxStepProps> = (\n  props\n) => {\n  const classes = useStyles();\n  const { sandboxStep, loading } = useAuth();\n  const handleStep = async () => {\n    if (sandboxStep && !loading) {\n      await sandboxStep();\n    }\n  };\n  return (\n    <Button onClick={handleStep} disabled={loading}>\n      Step\n    </Button>\n  );\n};\n\nconst useStyles = makeStyles({});\n","import React from 'react';\nimport { Button, makeStyles, TextField } from '@material-ui/core';\nimport { useTransactionsHook } from '../../custom-hooks/useTransactionsHook';\nimport { SandboxStep } from './SandboxStep';\n\nexport interface TransactionsProps {}\nexport const Transactions: React.FunctionComponent<TransactionsProps> = (\n  props\n) => {\n  const {\n    amount,\n    handleAmountChange,\n    handleBuyClick,\n    handleSellClick,\n  } = useTransactionsHook();\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <TextField value={amount} type=\"number\" onChange={handleAmountChange} />\n      <Button onClick={handleBuyClick}>Buy</Button>\n      <Button onClick={handleSellClick}>Sell</Button>\n      <SandboxStep />\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n  },\n});\n","import React from 'react';\nimport {\n  List,\n  makeStyles,\n  ListItem,\n  ListItemText,\n  CircularProgress,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAvailableTickers } from '../../../selectors/tickers/tickers';\nimport { useEffect } from 'react';\nimport {\n  loadAvailableTickers,\n  setSelectedTicker,\n} from '../../../store/tickers';\nimport useAuth from '../../../context/useAuth';\n\nexport interface AvailableTickersProps {}\nexport const AvailableTickers: React.FunctionComponent<AvailableTickersProps> = (\n  props\n) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const tickers = useSelector(getAvailableTickers);\n  const { user } = useAuth();\n  useEffect(() => {\n    if (tickers.length === 0 && user !== undefined) {\n      dispatch(loadAvailableTickers(user.sandboxData.currentTime));\n    }\n  }, [tickers]);\n  const handleTickerClick = (name: string) => {\n    dispatch(setSelectedTicker(name));\n  };\n  return (\n    <div>\n      {tickers.length > 0 ? (\n        <List>\n          {tickers.map((ticker) => (\n            <ListItem onClick={() => handleTickerClick(ticker)}>\n              <ListItemText primary={ticker} />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({});\n","import React from 'react';\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport { Add, Remove } from '@material-ui/icons';\nimport { TransactionsProps } from '../Transactions';\nimport useAuth from '../../../context/useAuth';\nimport { useState } from 'react';\nimport { OperationType, TransactionWithTicker } from '../../../types/user';\nimport { useEffect } from 'react';\nimport { getUserTransactions } from '../../../context/get-user-transactions';\n\nexport interface TransactionsHistoryProps {}\nexport const TransactionsHistory: React.FunctionComponent<TransactionsProps> = (\n  props\n) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [transactions, setTransactions] = useState<TransactionWithTicker[]>([]);\n  useEffect(() => {\n    if (user !== undefined) {\n      setTransactions(getUserTransactions(user));\n    }\n  }, [user]);\n\n  return (\n    <div>\n      {transactions.length > 0 && (\n        <List>\n          {transactions.map(\n            ({ amount, price, operationType: type, ticker }) => (\n              <ListItem>\n                <ListItemIcon>\n                  {type === OperationType.Buy ? <Add /> : <Remove />}\n                </ListItemIcon>\n                <ListItemText\n                  primary={`${amount} ${ticker}`}\n                  secondary={price}\n                />\n              </ListItem>\n            )\n          )}\n        </List>\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  item: {},\n});\n","import { TransactionWithTicker, User } from '../types/user';\n\nexport const getUserTransactions = (user: User): TransactionWithTicker[] => {\n  return user.sandboxData.assets\n    .reduce<TransactionWithTicker[]>(\n      (acc, curr) => [...acc, ...curr.transactions],\n      []\n    )\n    .sort((a, b) => a.timestamp - b.timestamp);\n};\n","import React from 'react';\nimport { List, makeStyles, ListItemText, ListItem } from '@material-ui/core';\nimport useAuth from '../../../context/useAuth';\n\nexport interface AssetsProps {}\nexport const Assets: React.FunctionComponent<AssetsProps> = (props) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const assets = user?.sandboxData.assets;\n  return (\n    <div>\n      {assets !== undefined && (\n        <List>\n          {assets.map(({ ticker, amount }) => (\n            <ListItem>\n              <ListItemText primary={ticker} secondary={amount} />\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({});\n","import React from 'react';\nimport {\n  AppBar,\n  makeStyles,\n  Tab,\n  Tabs,\n  Typography,\n  Box,\n} from '@material-ui/core';\nimport { Transactions } from './Transactions';\nimport { AvailableTickers } from './RightsideBar/AvailableTickers';\nimport { TransactionsHistory } from './RightsideBar/TransactionsHistory';\nimport { Assets } from './RightsideBar/Assets';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport interface SandboxContentProps {}\nexport const SandboxContent: React.FunctionComponent<SandboxContentProps> = (\n  props\n) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"simple tabs example\"\n      >\n        <Tab label=\"Transaction\" />\n        <Tab label=\"Tickers\" />\n        <Tab label=\"History\" />\n        <Tab label=\"Your Assets\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <Transactions />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <AvailableTickers />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <TransactionsHistory />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <Assets />\n      </TabPanel>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#3f51b5',\n    flexGrow: 1,\n  },\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllTickerHistory, getTickerHistory } from '../../store/tickers';\nimport { RootState } from '../../store/types';\nimport { getTickerData } from '../../selectors/tickers/tickers';\nimport { TickerChart } from './TickerChart';\nimport { ChartRouter } from './ChartRouter';\nimport { Transactions } from './Transactions';\nimport { AvailableTickers } from './RightsideBar/AvailableTickers';\nimport { TransactionsHistory } from './RightsideBar/TransactionsHistory';\nimport { Assets } from './RightsideBar/Assets';\nimport useAuth from '../../context/useAuth';\nimport { SandboxInit } from './SandboxInit';\nimport { SandboxContent } from './SandboxContent';\n\nexport interface SandboxProps {}\nconst tickerName = 'AAPL';\nexport const Sandbox: React.FunctionComponent<SandboxProps> = (props) => {\n  const { user } = useAuth();\n  const start = user?.sandboxData?.startTime;\n  return (\n    <div>\n      {start !== undefined && start.getTime() !== 0 ? (\n        <>\n          <ChartRouter />\n          <SandboxContent />\n        </>\n      ) : (\n        <SandboxInit />\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({});\n","/** @jsxImportSource @emotion/react */\nimport { ThemeProvider } from '@emotion/react';\nimport { Page } from './Components/Page';\nimport theme from './theme';\nimport { Typography } from '@material-ui/core';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { HomePage } from './Components/HomePage';\nimport { NavigationBar } from './Components/NavigationBar';\nimport { EducationPage } from './Components/Education/EducationPage';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { EducationLesson } from './Components/Education/EducationLesson';\nimport { SignIn } from './Components/Auth/SignIn';\nimport { SignUp } from './Components/Auth/SignUp';\nimport { AuthProvider } from './context/useAuth';\nimport { Sandbox } from './Components/Sandbox/Sandbox';\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <HashRouter>\n          <AuthProvider>\n            <NavigationBar />\n            <Page>\n              <Switch>\n                <Route path=\"/home\">\n                  <HomePage />\n                </Route>\n                <Route exact path=\"/education\">\n                  <EducationPage />\n                </Route>\n                <Route exact path=\"/sandbox\">\n                  <Sandbox />\n                </Route>\n                <Route path=\"/education/:lessonDataId\">\n                  <EducationLesson />\n                </Route>\n                <Route path=\"/sign-in\">\n                  <SignIn />\n                </Route>\n                <Route path=\"/sign-up\">\n                  <SignUp />\n                </Route>\n              </Switch>\n              {/* <Typography variant=\"h1\">Bulls and Bears</Typography> */}\n            </Page>\n          </AuthProvider>\n        </HashRouter>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Lesson, LessonData } from './types';\n\nexport enum EducationActionType {\n  SetLessons = 'SET_LESSONS',\n  SetLessonData = 'SET_LESSON_DATA',\n}\n\nexport interface SetLessons {\n  type: EducationActionType.SetLessons;\n  lessons: Lesson[];\n}\n\nexport interface SetLessonData {\n  type: EducationActionType.SetLessonData;\n  data: LessonData;\n}\n\nexport type Action = SetLessons | SetLessonData;\n","import {\n  LessonDataSlide,\n  LessonDataSlideResponse,\n} from '../../../store/education';\n\nexport const mapResponseSlideToSlide = ({\n  slide_number: slideNumber,\n  ...rest\n}: LessonDataSlideResponse): LessonDataSlide => ({\n  ...rest,\n  slideNumber,\n});\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport {\n  GetAllLessonsResponse,\n  GetLessonDataResponse,\n  Lesson,\n  LessonData,\n  LessonDataId,\n} from './types';\nimport { EducationActionType, SetLessonData, SetLessons } from './action-types';\nimport { mapResponseSlideToSlide } from '../../selectors/education/utils/map-response-slide-to-slide';\n\nconst API_URL = process.env.REACT_APP_SERVER_URL;\n\nexport const setLessons = (lessons: Lesson[]): SetLessons => ({\n  type: EducationActionType.SetLessons,\n  lessons,\n});\n\nexport const setLessonData = (data: LessonData): SetLessonData => ({\n  type: EducationActionType.SetLessonData,\n  data,\n});\n\n// some action fetching lessons\nexport const getAllLessons = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => async (dispatch) => {\n  const response = await fetch(`${API_URL}/db/get_all_lessons`);\n  const responseJson: GetAllLessonsResponse = await response.json();\n  dispatch(setLessons(responseJson.lessons));\n};\n\n// some action fetching data\nexport const getLessonData = (\n  lessonDataId: LessonDataId\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => async (dispatch) => {\n  const response = await fetch(\n    `${API_URL}/db/get_lesson_data?uid=${lessonDataId}`\n  );\n  const responseJson: GetLessonDataResponse = await response.json();\n  const {\n    lesson_data: { _id: id, slides },\n  } = responseJson;\n  dispatch(setLessonData({ id, slides: slides.map(mapResponseSlideToSlide) }));\n};\n","export * from './action-types';\nexport * from './actions';\nexport * from './reducer';\nexport * from './types';\n"],"sourceRoot":""}